pipeline {
    agent any
    triggers { pollSCM('* * * * *') }
    stages {
        stage('checkout') {
            steps {
                // Get some code from a GitHub repository
                git url:'https://github.com/sikkumishra1993/Sample.git', branch:'master'

                // Run Maven on a Unix agent.
                // sh "./mvnw compile"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
            
        // stage('Build') {
        //     steps {
        //         // Get some code from a GitHub repository
        //         // git url:'https://github.com/sikkumishra1993/jgsu-spring-petclinic.git', branch:'main'

        //         // Run Maven on a Unix agent.
        //         // sh "mvn install -DskipTests"

        //         // To run Maven on a Windows agent, use
        //         // bat "mvn -Dmaven.test.failure.ignore=true clean package"
        //     }
        // }
    }

            post {
            //     // If Maven was able to run the tests, even if some of the test
            //     // failed, record the test results and archive the jar file.
                always ("post install") {
            //         // junit '**/target/surefire-reports/TEST-*.xml'
            //         // archiveArtifacts 'target/*.jar'
                    // emailext //attachLog: true, 
                    // body: 'please go to ${BUILD_URL} and verify the build', 
                    // // compressLog: true, 
                    // subject: 'Job \'${JOB_NAME}\' (Build ${BUILD_NUMBER}) ${currentBuild.result}', 
                    // to: 'sikkumishra1993@gmail.com'
                    emailext body: 'please go to ${BUILD_URL} and verify the build', subject: 'Job \'${JOB_NAME}\' (Build ${BUILD_NUMBER}) ${currentBuild.result}', to: 'sikkumishra1993@gmail.com'
                }
            }
    
    }